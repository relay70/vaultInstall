---
- name: Install HashiCorp Vault
  hosts: all
  become: true
  become_method: sudo
  become_user: root

  ## Set these here. We'll need them in a few tasks
  environment:
    VAULT_ADDR: 'https://127.0.0.1:8200'
    VAULT_SKIP_VERIFY: true

  vars:
    hashirepourl: "https://rpm.releases.hashicorp.com/fedora/hashicorp.repo"
    support_packages:
      - dnf-plugins-core

    packages:
      - vault

    outfile: "./KEYS"

    username: "admin"

  vars_prompt:
    - name: adminpassword
      prompt: "Password for admin user"
      private: true


  tasks:

### SYSTEM PREP ###
    - name: Install dnf-plugins
      ansible.builtin.dnf:
        name: "dnf-plugins-core"
        state: present

    # - name: Install Hashi Repo
    #  ansible.builtin.command:
    #    cmd: dnf config-manager --add-repo {{ hashirepourl }}

    - name: Install Vault
      ansible.builtin.dnf:
        name: "vault"
        state: present

    - name: Enable Start vault
      ansible.builtin.systemd_service:
        name: vault
        enabled: true
        state: started

    - name: Initialize Vault
      ansible.builtin.command:
        cmd: vault operator init
      register: initoutput

    # - name: Get Keys
    #  ansible.builtin.debug:
    #    msg: "{{ item.split(' ') | last }}"
    #  with_items:
    #    - "{{ initoutput.stdout_lines | select('match', 'Unseal Key') }}"
    #  register: unsealkeys

    # - name: Debug
    #  ansible.builtin.debug:
    #    msg: "{{ unsealkeys }}"

    - name: Unseal Vault
      ansible.builtin.command:
        cmd: "vault operator unseal {{ item.split(' ') | last }}"
      with_items:
        - "{{ initoutput.stdout_lines | select('match', 'Unseal Key') }}"

    - name: Write Keys to file
      ansible.builtin.lineinfile:
        path: "{{ outfile }}"
        line: "{{ item }}"
        create: true
        mode: '0400'
      with_items:
        - "{{ initoutput.stdout_lines | select('match', 'Unseal Key') }}"

    # - name: Get Root Token
    #  ansible.builtin.debug:
    #    msg: "{{ item }}"
    #  with_items:
    #    - "{{ initoutput.stdout_lines | select('match', 'Initial Root Token: ') }}"

    - name: Get Root Token
      ansible.builtin.set_fact:
        token: "{{ item.split(' ') | last }}"
      with_items:
        - "{{ initoutput.stdout_lines | select('match', 'Initial Root Token: ') }}"

    - name: Write Root Token to file
      ansible.builtin.lineinfile:
        path: "{{ outfile }}"
        line: "Initial Root Token: {{ item }}"
        create: true
        mode: '0400'
      with_items:
        - "{{ token }}"

    - name: Copy Admin Policy file
      ansible.builtin.copy:
        src: "./configFiles/adminPolicy.hcl"
        dest: "/tmp/adminPolicy.hcl"
        mode: '0666'

    ## Moved to next task.
    # - name: Create Admin Policy
    #  ansible.builtin.command:
    #    cmd: vault policy write admin /tmp/adminPolicy.hcl
    #  environment:
    #    VAULT_TOKEN: "{{ token }}"

    - name: Enable UserPass and Admin
      ansible.builtin.command:
        cmd: "{{ item }}"
      environment:
        VAULT_TOKEN: "{{ token }}"
      with_items:
        - "vault policy write admin /tmp/adminPolicy.hcl"
        - "vault auth enable userpass"
        - "vault write auth/userpass/users/admin password={{ adminpassword }} policies=admins"
